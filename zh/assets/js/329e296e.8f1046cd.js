"use strict";(self.webpackChunkwechaty_docusaurus=self.webpackChunkwechaty_docusaurus||[]).push([[5770,5863,2775,2076,9725,4562,9842,7574,313,196,9685,2826],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>m});var n=a(67294);function o(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function s(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function r(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?s(Object(a),!0).forEach((function(e){o(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,n,o=function(t,e){if(null==t)return{};var a,n,o={},s=Object.keys(t);for(n=0;n<s.length;n++)a=s[n],e.indexOf(a)>=0||(o[a]=t[a]);return o}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(n=0;n<s.length;n++)a=s[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(o[a]=t[a])}return o}var i=n.createContext({}),p=function(t){var e=n.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):r(r({},e),t)),a},c=function(t){var e=p(t.components);return n.createElement(i.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},h=n.forwardRef((function(t,e){var a=t.components,o=t.mdxType,s=t.originalType,i=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),u=p(a),h=o,m=u["".concat(i,".").concat(h)]||u[h]||d[h]||s;return a?n.createElement(m,r(r({ref:e},c),{},{components:a})):n.createElement(m,r({ref:e},c))}));function m(t,e){var a=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var s=a.length,r=new Array(s);r[0]=h;var l={};for(var i in e)hasOwnProperty.call(e,i)&&(l[i]=e[i]);l.originalType=t,l[u]="string"==typeof t?t:o,r[1]=l;for(var p=2;p<s;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},85162:(t,e,a)=>{a.d(e,{Z:()=>r});var n=a(67294),o=a(86010);const s={tabItem:"tabItem_Ymn6"};function r(t){let{children:e,hidden:a,className:r}=t;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(s.tabItem,r),hidden:a},e)}},74866:(t,e,a)=>{a.d(e,{Z:()=>v});var n=a(87462),o=a(67294),s=a(86010),r=a(12466),l=a(16550),i=a(91980),p=a(67392),c=a(50012);function u(t){return function(t){return o.Children.map(t,(t=>{if(!t||(0,o.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(t).map((t=>{let{props:{value:e,label:a,attributes:n,default:o}}=t;return{value:e,label:a,attributes:n,default:o}}))}function d(t){const{values:e,children:a}=t;return(0,o.useMemo)((()=>{const t=e??u(a);return function(t){const e=(0,p.l)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,a])}function h(t){let{value:e,tabValues:a}=t;return a.some((t=>t.value===e))}function m(t){let{queryString:e=!1,groupId:a}=t;const n=(0,l.k6)(),s=function(t){let{queryString:e=!1,groupId:a}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,i._X)(s),(0,o.useCallback)((t=>{if(!s)return;const e=new URLSearchParams(n.location.search);e.set(s,t),n.replace({...n.location,search:e.toString()})}),[s,n])]}function g(t){const{defaultValue:e,queryString:a=!1,groupId:n}=t,s=d(t),[r,l]=(0,o.useState)((()=>function(t){let{defaultValue:e,tabValues:a}=t;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=a.find((t=>t.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:e,tabValues:s}))),[i,p]=m({queryString:a,groupId:n}),[u,g]=function(t){let{groupId:e}=t;const a=function(t){return t?`docusaurus.tab.${t}`:null}(e),[n,s]=(0,c.Nk)(a);return[n,(0,o.useCallback)((t=>{a&&s.set(t)}),[a,s])]}({groupId:n}),y=(()=>{const t=i??u;return h({value:t,tabValues:s})?t:null})();(0,o.useLayoutEffect)((()=>{y&&l(y)}),[y]);return{selectedValue:r,selectValue:(0,o.useCallback)((t=>{if(!h({value:t,tabValues:s}))throw new Error(`Can't select invalid tab value=${t}`);l(t),p(t),g(t)}),[p,g,s]),tabValues:s}}var y=a(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(t){let{className:e,block:a,selectedValue:l,selectValue:i,tabValues:p}=t;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,r.o5)(),d=t=>{const e=t.currentTarget,a=c.indexOf(e),n=p[a].value;n!==l&&(u(e),i(n))},h=t=>{let e=null;switch(t.key){case"Enter":d(t);break;case"ArrowRight":{const a=c.indexOf(t.currentTarget)+1;e=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(t.currentTarget)-1;e=c[a]??c[c.length-1];break}}e?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},e)},p.map((t=>{let{value:e,label:a,attributes:r}=t;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===e?0:-1,"aria-selected":l===e,key:e,ref:t=>c.push(t),onKeyDown:h,onClick:d},r,{className:(0,s.Z)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":l===e})}),a??e)})))}function f(t){let{lazy:e,children:a,selectedValue:n}=t;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){const t=s.find((t=>t.props.value===n));return t?(0,o.cloneElement)(t,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},s.map(((t,e)=>(0,o.cloneElement)(t,{key:e,hidden:t.props.value!==n}))))}function w(t){const e=g(t);return o.createElement("div",{className:(0,s.Z)("tabs-container",b.tabList)},o.createElement(k,(0,n.Z)({},t,e)),o.createElement(f,(0,n.Z)({},t,e)))}function v(t){const e=(0,y.Z)();return o.createElement(w,(0,n.Z)({key:String(e)},t))}},23033:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>p,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=a(87462),o=(a(67294),a(3905)),s=a(74866),r=a(85162),l=a(3569);const i={title:"Running locally"},p=void 0,c={unversionedId:"getting-started/running-locally",id:"getting-started/running-locally",title:"Running locally",description:"Powered by Wechaty",source:"@site/docs/getting-started/running-locally.mdx",sourceDirName:"getting-started",slug:"/getting-started/running-locally",permalink:"/zh/docs/getting-started/running-locally",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/getting-started/running-locally.mdx",tags:[],version:"current",lastUpdatedBy:"Souvik Biswas",lastUpdatedAt:1631617031,formattedLastUpdatedAt:"2021\u5e749\u670814\u65e5",frontMatter:{title:"Running locally"},sidebar:"docs",previous:{title:"Running on Gitpod",permalink:"/zh/docs/quick-start/running-on-gitpod"},next:{title:"Video tutorial",permalink:"/zh/docs/tutorials/video-tutorial"}},u={},d=[{value:"Try out the bot",id:"try-out-the-bot",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Usage",id:"usage",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"1. Install make",id:"1-install-make",level:3},{value:"2. Clone repository",id:"2-clone-repository",level:3},{value:"3. Install dependencies",id:"3-install-dependencies",level:3},{value:"4. Run the bot",id:"4-run-the-bot",level:3},{value:"Building the bot",id:"building-the-bot",level:2},{value:"1. Initialize project",id:"1-initialize-project",level:3},{value:"2. Install dependencies",id:"2-install-dependencies",level:3},{value:"3. Writing code for bot",id:"3-writing-code-for-bot",level:3},{value:"Running the bot",id:"running-the-bot",level:2},{value:"Bot demonstration",id:"bot-demonstration",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"References",id:"references",level:2}],h={toc:d},m="wrapper";function g(t){let{components:e,...i}=t;return(0,o.kt)(m,(0,n.Z)({},h,i,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Wechaty/wechaty"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Powered%20By-Wechaty-brightgreen.svg",alt:"Powered by Wechaty"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/%3C%2F%3E-TypeScript-blue.svg",alt:"TypeScript"}))),(0,o.kt)("p",null,"For running Ding Dong Bot, you can setup your own server for running locally. Just follow the steps below:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Getting Started"),(0,o.kt)("li",{parentName:"ol"},"Clone the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/wechaty/wechaty-getting-started"},"Ding Dong Bot")," repository"),(0,o.kt)("li",{parentName:"ol"},"Install dependencies"),(0,o.kt)("li",{parentName:"ol"},"Run the bot")),(0,o.kt)("h2",{id:"try-out-the-bot"},"Try out the bot"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://codesandbox.io/s/github/wechaty/wechaty-getting-started/tree/main/examples/third-parties/codesandbox?hidenavigation=1&module=%2Fding-dong-bot.ts&theme=dark"},(0,o.kt)("img",{parentName:"a",src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit wechaty-ding-dong-bot"}))),(0,o.kt)("p",null,"You can try out Ding Dong Bot using this interactive CodeSandbox."),(0,o.kt)("p",null,"Just scan the generated QR code with ",(0,o.kt)("strong",{parentName:"p"},"WeChat")," app and you are ready to go."),(0,o.kt)("iframe",{class:"codesandbox",src:"https://codesandbox.io/embed/github/wechaty/wechaty-getting-started/tree/main/examples/third-parties/codesandbox?fontsize=12&hidenavigation=1&module=%2Fding-dong-bot.ts&theme=dark",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://nodejs.dev/"},"Node.js")," v16+"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://wechaty.js.org/docs/puppet-services/"},"Wechaty Puppet Service TOKEN")," (if you want to use RPA protocols other than Web)")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)(l.default,{mdxType:"ShortestChatbots"}),(0,o.kt)("h2",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"In this tutorial you will learn to use Ding Dong bot which replies with a ",(0,o.kt)("inlineCode",{parentName:"p"},"dong")," message when it receives a ",(0,o.kt)("inlineCode",{parentName:"p"},"ding")," message."),(0,o.kt)("p",null,"Before getting started make sure you have ",(0,o.kt)("inlineCode",{parentName:"p"},"Node")," installed on your system. If you do not have ",(0,o.kt)("inlineCode",{parentName:"p"},"Node.js")," installed (or have a version below 12),\nthen you need to install the latest version of ",(0,o.kt)("inlineCode",{parentName:"p"},"Node.js")," by following the links below:"),(0,o.kt)("admonition",{title:"Node.js installation docs",type:"note"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#windows"},"Windows")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions"},"Linux","(","Debian/Ubuntu",")")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#macos"},"macOS"))),(0,o.kt)("blockquote",{parentName:"admonition"},(0,o.kt)("p",{parentName:"blockquote"},"Installation guide for ",(0,o.kt)("inlineCode",{parentName:"p"},"Node.js")," in other platforms can be found ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/package-manager/"},"here"),"."))),(0,o.kt)("p",null,"You can head over to ",(0,o.kt)("a",{parentName:"p",href:"#building-the-bot"},"Building the bot")," section to learn how to build the bot on your own."),(0,o.kt)("p",null,"If you just want to try out the bot on your local system, follow the steps below."),(0,o.kt)("h3",{id:"1-install-make"},"1. Install make"),(0,o.kt)("p",null,"You will need ",(0,o.kt)("inlineCode",{parentName:"p"},"make")," for running the ",(0,o.kt)("strong",{parentName:"p"},"Makefile"),", use the command below to install:"),(0,o.kt)(s.Z,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"linux",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt install build-essential\n"))),(0,o.kt)(r.Z,{value:"mac",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"brew install make\n"))),(0,o.kt)(r.Z,{value:"windows",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"choco install make\n")))),(0,o.kt)("h3",{id:"2-clone-repository"},"2. Clone repository"),(0,o.kt)("p",null,"You can clone the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/wechaty/wechaty-getting-started"},"Ding Dong Bot")," repository by following the below command, and navigate to the directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/wechaty/wechaty-getting-started\ncd wechaty-getting-started\n")),(0,o.kt)("h3",{id:"3-install-dependencies"},"3. Install dependencies"),(0,o.kt)("p",null,"For installing the required ",(0,o.kt)("inlineCode",{parentName:"p"},"npm")," dependencies run the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# npm install\nmake install\n")),(0,o.kt)("h3",{id:"4-run-the-bot"},"4. Run the bot"),(0,o.kt)("p",null,"First, you have to ",(0,o.kt)("inlineCode",{parentName:"p"},"export/set")," the environment variables, and then you can run the bot:"),(0,o.kt)(s.Z,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"linux",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\nmake bot\n# the above is equals to the below command:\n# npm start\n#   or, npx ts-node examples/ding-dong-bot.ts\n"))),(0,o.kt)(r.Z,{value:"mac",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\nmake bot\n# the above is equals to the below command:\n# npm start\n#   or, npx ts-node examples/ding-dong-bot.ts\n"))),(0,o.kt)(r.Z,{value:"windows",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"set WECHATY_LOG=verbose\nset WECHATY_PUPPET=wechaty-puppet-wechat\nmake bot\n# the above is equals to the below command:\n# npm start\n#   or, npx ts-node examples/ding-dong-bot.ts\n")))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"There are various ",(0,o.kt)("strong",{parentName:"p"},"Wechaty puppets")," available, you can know more about them ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/wechaty/wechaty-getting-started#working-with-different-puppets"},"here"),".")),(0,o.kt)("p",null,"This will generate a QR code. Scan it using Wechat or WhatsApp depending upon the puppet used."),(0,o.kt)("p",null,"You are ready to play with the bot."),(0,o.kt)("h2",{id:"building-the-bot"},"Building the bot"),(0,o.kt)("p",null,"Let's get started with building the Ding Dong bot using Wechaty."),(0,o.kt)("h3",{id:"1-initialize-project"},"1. Initialize project"),(0,o.kt)("p",null,"Create a new folder called ",(0,o.kt)("inlineCode",{parentName:"p"},"ding-dong-bot")," and move into that directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir ding-dong-bot\ncd ding-dong-bot\n")),(0,o.kt)("p",null,"Use the following command to initialize an npm project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm init -y\n")),(0,o.kt)("p",null,"This will generate the ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," file containing these:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "ding-dong-bot",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1"\n  },\n  "keywords": [],\n  "author": "",\n  "license": "ISC"\n}\n')),(0,o.kt)("h3",{id:"2-install-dependencies"},"2. Install dependencies"),(0,o.kt)("p",null,"For building the ding dong bot you will require these dependencies:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/wechaty"},"wechaty"),": Official Wechaty package"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/qrcode-terminal"},"qrcode-terminal"),": Displays the QR code")),(0,o.kt)("p",null,"For installing these dependencies run the following commands:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"For installing wechaty"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"For installing qrcode-terminal"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install qrcode-terminal\n")),(0,o.kt)("p",null,"You will also need to add dependencies for using any ",(0,o.kt)("a",{parentName:"p",href:"https://wechaty.js.org/docs/puppet-providers/"},"Wechaty Puppet"),"\nwhich helps to integrate Wechaty with various ",(0,o.kt)("strong",{parentName:"p"},"instant messaging (IM) systems")," (such as WeChat, Whatsapp, and Gitter):"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"If you want to use ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.whatsapp.com/"},"WhatsApp")),", install ",(0,o.kt)("inlineCode",{parentName:"p"},"wechaty-puppet-whatsapp"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-whatsapp\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"If you want to use ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.wechat.com/"},"WeChat")),", you can try the following puppets:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Web Protocol:")," Install ",(0,o.kt)("inlineCode",{parentName:"p"},"wechaty-puppet-wechat"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-wechat\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"iPad Protocol:")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"padlocal: Install ",(0,o.kt)("inlineCode",{parentName:"p"},"wechaty-puppet-padlocal"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-padlocal\n")),(0,o.kt)("p",{parentName:"li"},"Then get a token like ",(0,o.kt)("inlineCode",{parentName:"p"},"puppet_padlocal_XXX"),", know more about puppet service padlocal ",(0,o.kt)("a",{parentName:"p",href:"http://wechaty.js.org/docs/puppet-services/padlocal"},"here"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"paimon: Install ",(0,o.kt)("inlineCode",{parentName:"p"},"wechaty-puppet-service"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-service\n")),(0,o.kt)("p",{parentName:"li"},"Then get a token like ",(0,o.kt)("inlineCode",{parentName:"p"},"puppet_paimon_XXX"),", know more about puppet service paimon ",(0,o.kt)("a",{parentName:"p",href:"http://wechaty.js.org/docs/puppet-services/paimon"},"here"),".")))))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"If you want to use ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://work.weixin.qq.com/"},"WeCom")),", install ",(0,o.kt)("inlineCode",{parentName:"p"},"wechaty-puppet-service"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install wechaty-puppet-service\n")),(0,o.kt)("p",{parentName:"li"},"Then get a token like ",(0,o.kt)("inlineCode",{parentName:"p"},"puppet_wxwork_XXXXX"),", more about puppet service wxwork ",(0,o.kt)("a",{parentName:"p",href:"https://wechaty.js.org/docs/puppet-services/wxwork/"},"here"),"."))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"You can find more information about the puppets ",(0,o.kt)("a",{parentName:"p",href:"https://wechaty.js.org/docs/puppet-providers/"},"here"),".")),(0,o.kt)("p",null,"Now, you are ready to write the main code for the bot."),(0,o.kt)("h3",{id:"3-writing-code-for-bot"},"3. Writing code for bot"),(0,o.kt)("p",null,"Create a new file ",(0,o.kt)("inlineCode",{parentName:"p"},"ding-dong-bot.ts"),". We will be writing the code here."),(0,o.kt)("p",null,"Let's import the required packages in this file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  Contact,\n  Message,\n  ScanStatus,\n  Wechaty,\n  log,\n}from 'wechaty'\n\nimport { generate } from 'qrcode-terminal'\n\nrequire('dotenv').config()\n")),(0,o.kt)("p",null,"Now we will write some functions which will be required for handling different events returned by bot."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"onScan")),(0,o.kt)("p",null,"This function will be required for generating QR code for puppet specified and Displays it on console."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function onScan (qrcode: string, status: ScanStatus) {\n  if (status === ScanStatus.Waiting || status === ScanStatus.Timeout) {\n    generate(qrcode, { small: true })  // show qrcode on console\n\n    const qrcodeImageUrl = [\n      'https://wechaty.js.org/qrcode/',\n      encodeURIComponent(qrcode),\n    ].join('')\n\n    log.info('StarterBot', 'onScan: %s(%s) - %s', ScanStatus[status], status, qrcodeImageUrl)\n  } else {\n    log.info('StarterBot', 'onScan: %s(%s)', ScanStatus[status], status)\n  }\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"1."),"  If ",(0,o.kt)("inlineCode",{parentName:"p"},"status")," is ",(0,o.kt)("strong",{parentName:"p"},"Waiting")," or ",(0,o.kt)("strong",{parentName:"p"},"Timeout")," then function ",(0,o.kt)("inlineCode",{parentName:"p"},"onScan")," will generate qrcode"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"2."),"  ",(0,o.kt)("inlineCode",{parentName:"p"},"qrcodeImageUrl")," is used for reading the generated ",(0,o.kt)("inlineCode",{parentName:"p"},"qrcode"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"encodeURIComponent(qrcode)")," encodes a URI (string that refers to a resource ie. qrcode) by replacing each instance of certain characters by UTF-8 encoding of characters."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"3."),"  After reading the ",(0,o.kt)("inlineCode",{parentName:"p"},"qrcode")," it return ",(0,o.kt)("inlineCode",{parentName:"p"},"ScanStatus"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"onLogin")),(0,o.kt)("p",null,"This function will print message when a user logs into the bot."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function onLogin (user: Contact) {\n  log.info('StarterBot', '%s login', user)\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"onLogout")),(0,o.kt)("p",null,"This will print message when a user logs out."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function onLogout (user: Contact) {\n  log.info('StarterBot', '%s logout', user)\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"onMessage")),(0,o.kt)("p",null,"This will print a log message. If the message is ",(0,o.kt)("inlineCode",{parentName:"p"},"ding")," then it will print ",(0,o.kt)("inlineCode",{parentName:"p"},"dong"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"async function onMessage (msg: Message) {\n  log.info('StarterBot', msg.toString())\n\n  if (msg.text() === 'ding') {\n    await msg.say('dong')\n  }\n}\n")),(0,o.kt)("p",null,"Now initializing the bot by providing a name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const bot = new Wechaty({\n  name: 'ding-dong-bot',\n})\n")),(0,o.kt)("p",null,"Assigning proper functions to call when an event is triggered."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"bot.on('scan',    onScan)\nbot.on('login',   onLogin)\nbot.on('logout',  onLogout)\nbot.on('message', onMessage)\n")),(0,o.kt)("p",null,"Finally for starting the bot"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"bot.start()\n  .then(() => log.info('StarterBot', 'Starter Bot Started.'))\n  .catch(e => log.error('StarterBot', e))\n")),(0,o.kt)("h2",{id:"running-the-bot"},"Running the bot"),(0,o.kt)("p",null,"You have to ",(0,o.kt)("strong",{parentName:"p"},"export/set")," an environment variable with the type of puppet to use:"),(0,o.kt)(s.Z,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"linux",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\n\n# For using WhatsApp:\n# export WECHATY_PUPPET=wechaty-puppet-whatsapp\n\n# For using WeCom:\n# export WECHATY_PUPPET=wechaty-puppet-service\n# export WECHATY_PUPPET_SERVICE_TOKEN="puppet_wxwork_XXXXX"\n'))),(0,o.kt)(r.Z,{value:"mac",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\n\n# For using WhatsApp:\n# export WECHATY_PUPPET=wechaty-puppet-whatsapp\n\n# For using WeCom:\n# export WECHATY_PUPPET=wechaty-puppet-service\n# export WECHATY_PUPPET_SERVICE_TOKEN="puppet_wxwork_XXXXX"\n'))),(0,o.kt)(r.Z,{value:"windows",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'set WECHATY_LOG=verbose\nset WECHATY_PUPPET=wechaty-puppet-wechat\n\n# For using WhatsApp:\n# set WECHATY_PUPPET=wechaty-puppet-whatsapp\n\n# For using WeCom:\n# set WECHATY_PUPPET=wechaty-puppet-service\n# set WECHATY_PUPPET_SERVICE_TOKEN="puppet_wxwork_XXXXX"\n')))),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If you are using WeCom, you can get token from ",(0,o.kt)("a",{parentName:"p",href:"http://wechaty.js.org/docs/puppet-services/wxwork"},"puppet service wxwork"),".")),(0,o.kt)("p",null,"Run the bot using the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"ts-node ding-dong-bot.ts\n")),(0,o.kt)("p",null,"This will start bot and generate QR code like this:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"hard-way",src:a(4308).Z,width:"1037",height:"913"})),(0,o.kt)("p",null,"Scan it using your ",(0,o.kt)("strong",{parentName:"p"},"WeChat/WhatsApp")," as per the puppet you have selected, and you are ready to play with the bot!"),(0,o.kt)("h2",{id:"bot-demonstration"},"Bot demonstration"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"bot-demo",src:a(19115).Z,width:"928",height:"453"})),(0,o.kt)("h2",{id:"conclusion"},"Conclusion"),(0,o.kt)("p",null,"You have learnt to make a ding dong bot."),(0,o.kt)("h2",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/wechaty/wechaty-getting-started"},"Wechaty Getting Started GitHub repository"))))}g.isMDXComponent=!0},88332:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/dotnet/transclusions/shortest-chatbot",id:"polyglot/dotnet/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/dotnet/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/dotnet/transclusions",slug:"/polyglot/dotnet/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/dotnet/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/dotnet/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'var wechaty = new Wechaty(options, logger).onScan((qrcode, status) => {\n  Console.WriteLine($"Scan QR Code to login: {status} https://wechaty.js.org/qrcode/{(qrcode)}`");\n}).OnLogin( user => {\n  Console.WriteLine("User {user} logined");\n}).OnMessage( message => {\n  Console.WriteLine($"Message: {message}");\n}).Start();\n')))}d.isMDXComponent=!0},7230:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/go/transclusions/shortest-chatbot",id:"polyglot/go/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/go/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/go/transclusions",slug:"/polyglot/go/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/go/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/go/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n "fmt"\n\n  "github.com/wechaty/go-wechaty/wechaty"\n)\n\nfunc main() {\n  _ = wechaty.NewWechaty().\n    OnScan(func(qrCode, status string) {\n      fmt.Printf("Scan QR Code to login: %s\\nhttps://wechaty.js.org/qrcode/%s\\n", status, qrCode)\n    }).\n    OnLogin(func(user string) { fmt.Printf("User %s logged in\\n", user) }).\n    OnMessage(func(message string) { fmt.Printf("Message: %s\\n", message) }).\n    Start()\n}\n')))}d.isMDXComponent=!0},91791:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/java/transclusions/shortest-chatbot",id:"polyglot/java/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/java/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/java/transclusions",slug:"/polyglot/java/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/java/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/java/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'package io.github.wechaty;\n\nclass Bot{\n  public static void main(String args[]){\n    Wechaty bot = Wechaty.instance()\n      .onScan((qrcode, statusScanStatus, data) -> System.out.println(QrcodeUtils.getQr(qrcode)))\n      .onLogin(user -> System.out.println("User logged in :" + user))\n      .onMessage(message -> System.out.println("Message:" + message))\n      .start(true);\n  }\n}\n')))}d.isMDXComponent=!0},55318:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/openapi/transclusions/shortest-chatbot",id:"polyglot/openapi/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/openapi/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/openapi/transclusions",slug:"/polyglot/openapi/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/openapi/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/openapi/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616054254,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"# To be add: curl ...\n")))}d.isMDXComponent=!0},29577:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/php/transclusions/shortest-chatbot",id:"polyglot/php/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/php/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/php/transclusions",slug:"/polyglot/php/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/php/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/php/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},'$wechaty = \\IO\\Github\\Wechaty\\Wechaty::getInstance($token, $endPoint);\n$wechaty->onScan(function($qrcode, $status, $data) {\n    $qr = \\IO\\Github\\Wechaty\\Util\\QrcodeUtils::getQr($qrcode);\n    echo "$qr\\n\\nOnline Image: https://wechaty.js.org/qrcode/$qrcode\\n";\n})->onLogin(function(\\IO\\Github\\Wechaty\\User\\ContactSelf $user) {\n})->onMessage(function(\\IO\\Github\\Wechaty\\User\\Message $message) {\n    $message->say("hello from PHP7.4");\n})->start();\n')))}d.isMDXComponent=!0},34608:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/python/transclusions/shortest-chatbot",id:"polyglot/python/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/python/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/python/transclusions",slug:"/polyglot/python/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/python/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/python/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty\nimport asyncio\n\nasync def main():\n    bot = Wechaty()\n    bot.on('scan', lambda status, qrcode, data: print('Scan QR Code to login: {}\\nhttps://wechaty.js.org/qrcode/{}'.format(status, qrcode)))\n    bot.on('login', lambda user: print('User {} logged in'.format(user)))\n    bot.on('message', lambda message: print('Message: {}'.format(message)))\n    await bot.start()\n\nasyncio.run(main())\n")))}d.isMDXComponent=!0},19001:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/rust/transclusions/shortest-chatbot",id:"polyglot/rust/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/rust/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/rust/transclusions",slug:"/polyglot/rust/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/rust/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/rust/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"let bot = Wechaty::new(PuppetService::new(options).await.unwrap());\n\nbot.on_scan(handle_scan)\n    .on_login(handle_login)\n    .on_logout(handle_logout)\n    .on_message(handle_message)\n    .start()\n    .await;\n")))}d.isMDXComponent=!0},23705:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/scala/transclusions/shortest-chatbot",id:"polyglot/scala/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/scala/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/scala/transclusions",slug:"/polyglot/scala/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/scala/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/scala/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'package wechaty\n\nobject DingDongBot {\n  def main(args: Array[String]): Unit = {\n    Wechaty.instance()\n      .onScan(payload     => { println("Scan QR Code to login: %s\\nhttps://wechaty.js.org/qrcode/%s\\n".format(payload.status, payload.qrcode)) })\n      .onLogin(payload    => { println("User %s logged in\\n".format(payload.id)) })\n      .onMessage(message  => { println(message) })\n      .start()\n    Thread.currentThread().join()\n  }\n}\n')))}d.isMDXComponent=!0},3569:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>w,contentTitle:()=>k,default:()=>x,frontMatter:()=>b,metadata:()=>f,toc:()=>v});var n=a(87462),o=(a(67294),a(3905)),s=a(74866),r=a(85162),l=a(47650),i=a(55318),p=a(62570),c=a(34608),u=a(7230),d=a(91791),h=a(29577),m=a(23705),g=a(88332),y=a(19001);const b={},k=void 0,f={unversionedId:"polyglot/transclusions/shortest-chatbots",id:"polyglot/transclusions/shortest-chatbots",title:"shortest-chatbots",description:"<Tabs",source:"@site/docs/polyglot/transclusions/shortest-chatbots.mdx",sourceDirName:"polyglot/transclusions",slug:"/polyglot/transclusions/shortest-chatbots",permalink:"/zh/docs/polyglot/transclusions/shortest-chatbots",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/transclusions/shortest-chatbots.mdx",tags:[],version:"current",lastUpdatedBy:"shwetal",lastUpdatedAt:1630752945,formattedLastUpdatedAt:"2021\u5e749\u67084\u65e5",frontMatter:{}},w={},v=[],N={toc:v},T="wrapper";function x(t){let{components:e,...a}=t;return(0,o.kt)(T,(0,n.Z)({},N,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)(s.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"},{label:"OpenAPI",value:"openapi"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)(l.default,{mdxType:"ShortestChatbotTypeScript"})),(0,o.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)(p.default,{mdxType:"ShortestChatbotJavaScript"})),(0,o.kt)(r.Z,{value:"py",mdxType:"TabItem"},(0,o.kt)(c.default,{mdxType:"ShortestChatbotPython"})),(0,o.kt)(r.Z,{value:"go",mdxType:"TabItem"},(0,o.kt)(u.default,{mdxType:"ShortestChatbotGo"})),(0,o.kt)(r.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)(d.default,{mdxType:"ShortestChatbotJava"})),(0,o.kt)(r.Z,{value:"php",mdxType:"TabItem"},(0,o.kt)(h.default,{mdxType:"ShortestChatbotPhp"})),(0,o.kt)(r.Z,{value:"scala",mdxType:"TabItem"},(0,o.kt)(m.default,{mdxType:"ShortestChatbotScala"})),(0,o.kt)(r.Z,{value:"csharp",mdxType:"TabItem"},(0,o.kt)(g.default,{mdxType:"ShortestChatbotDotnet"})),(0,o.kt)(r.Z,{value:"rust",mdxType:"TabItem"},(0,o.kt)(y.default,{mdxType:"ShortestChatbotRust"})),(0,o.kt)(r.Z,{value:"openapi",mdxType:"TabItem"},(0,o.kt)(i.default,{mdxType:"ShortestChatbotOpenApi"}))))}x.isMDXComponent=!0},62570:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/typescript/transclusions/shortest-chatbot-js",id:"polyglot/typescript/transclusions/shortest-chatbot-js",title:"shortest-chatbot-js",description:"",source:"@site/docs/polyglot/typescript/transclusions/shortest-chatbot-js.mdx",sourceDirName:"polyglot/typescript/transclusions",slug:"/polyglot/typescript/transclusions/shortest-chatbot-js",permalink:"/zh/docs/polyglot/typescript/transclusions/shortest-chatbot-js",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/typescript/transclusions/shortest-chatbot-js.mdx",tags:[],version:"current",lastUpdatedBy:"fennghuang",lastUpdatedAt:1682493184,formattedLastUpdatedAt:"2023\u5e744\u670826\u65e5",frontMatter:{}},i={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { Wechaty } from 'wechaty'\n\nasync function main () {\n  const bot = new Wechaty()\n  bot\n    .on('scan', (qrcode, status) => console.log(`Scan QR Code to login: ${status}\\nhttps://wechaty.js.org/qrcode/${encodeURIComponent(qrcode)}`))\n    .on('login',            user => console.log(`User ${user} logged in`))\n    .on('message',       message => console.log(`Message: ${message}`))\n  await bot.start()\n}\n\nmain()\n  .catch(console.error)\n")))}d.isMDXComponent=!0},47650:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/typescript/transclusions/shortest-chatbot",id:"polyglot/typescript/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/typescript/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/typescript/transclusions",slug:"/polyglot/typescript/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/typescript/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/typescript/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Xiaohan Li",lastUpdatedAt:1619007923,formattedLastUpdatedAt:"2021\u5e744\u670821\u65e5",frontMatter:{}},i={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { Wechaty } from 'wechaty'\n\nasync function main () {\n  const bot = new Wechaty()\n  bot\n    .on('scan', (qrcode, status) => console.log(`Scan QR Code to login: ${status}\\nhttps://wechaty.js.org/qrcode/${encodeURIComponent(qrcode)}`))\n    .on('login',            user => console.log(`User ${user} logged in`))\n    .on('message',       message => console.log(`Message: ${message}`))\n  await bot.start()\n}\n\nmain()\n  .catch(console.error)\n")))}d.isMDXComponent=!0},19115:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/bot-demo-9344718bf055bc0179ca963e6ba20fe2.webp"},4308:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/hard-way-f38586945196470cc589fdd9a6e16d68.webp"}}]);