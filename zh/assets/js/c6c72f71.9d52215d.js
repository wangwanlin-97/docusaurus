"use strict";(self.webpackChunkwechaty_docusaurus=self.webpackChunkwechaty_docusaurus||[]).push([[8248,5863,2775,2076,9725,4562,9842,7574,313,196,9685,2826],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>g});var o=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function s(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,o)}return a}function r(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?s(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,o,n=function(t,e){if(null==t)return{};var a,o,n={},s=Object.keys(t);for(o=0;o<s.length;o++)a=s[o],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(o=0;o<s.length;o++)a=s[o],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var i=o.createContext({}),c=function(t){var e=o.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):r(r({},e),t)),a},u=function(t){var e=c(t.components);return o.createElement(i.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},h=o.forwardRef((function(t,e){var a=t.components,n=t.mdxType,s=t.originalType,i=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),p=c(a),h=n,g=p["".concat(i,".").concat(h)]||p[h]||d[h]||s;return a?o.createElement(g,r(r({ref:e},u),{},{components:a})):o.createElement(g,r({ref:e},u))}));function g(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var s=a.length,r=new Array(s);r[0]=h;var l={};for(var i in e)hasOwnProperty.call(e,i)&&(l[i]=e[i]);l.originalType=t,l[p]="string"==typeof t?t:n,r[1]=l;for(var c=2;c<s;c++)r[c]=a[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,a)}h.displayName="MDXCreateElement"},85162:(t,e,a)=>{a.d(e,{Z:()=>r});var o=a(67294),n=a(86010);const s={tabItem:"tabItem_Ymn6"};function r(t){let{children:e,hidden:a,className:r}=t;return o.createElement("div",{role:"tabpanel",className:(0,n.Z)(s.tabItem,r),hidden:a},e)}},74866:(t,e,a)=>{a.d(e,{Z:()=>w});var o=a(87462),n=a(67294),s=a(86010),r=a(12466),l=a(16550),i=a(91980),c=a(67392),u=a(50012);function p(t){return function(t){return n.Children.map(t,(t=>{if(!t||(0,n.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(t).map((t=>{let{props:{value:e,label:a,attributes:o,default:n}}=t;return{value:e,label:a,attributes:o,default:n}}))}function d(t){const{values:e,children:a}=t;return(0,n.useMemo)((()=>{const t=e??p(a);return function(t){const e=(0,c.l)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,a])}function h(t){let{value:e,tabValues:a}=t;return a.some((t=>t.value===e))}function g(t){let{queryString:e=!1,groupId:a}=t;const o=(0,l.k6)(),s=function(t){let{queryString:e=!1,groupId:a}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,i._X)(s),(0,n.useCallback)((t=>{if(!s)return;const e=new URLSearchParams(o.location.search);e.set(s,t),o.replace({...o.location,search:e.toString()})}),[s,o])]}function m(t){const{defaultValue:e,queryString:a=!1,groupId:o}=t,s=d(t),[r,l]=(0,n.useState)((()=>function(t){let{defaultValue:e,tabValues:a}=t;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const o=a.find((t=>t.default))??a[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:e,tabValues:s}))),[i,c]=g({queryString:a,groupId:o}),[p,m]=function(t){let{groupId:e}=t;const a=function(t){return t?`docusaurus.tab.${t}`:null}(e),[o,s]=(0,u.Nk)(a);return[o,(0,n.useCallback)((t=>{a&&s.set(t)}),[a,s])]}({groupId:o}),y=(()=>{const t=i??p;return h({value:t,tabValues:s})?t:null})();(0,n.useLayoutEffect)((()=>{y&&l(y)}),[y]);return{selectedValue:r,selectValue:(0,n.useCallback)((t=>{if(!h({value:t,tabValues:s}))throw new Error(`Can't select invalid tab value=${t}`);l(t),c(t),m(t)}),[c,m,s]),tabValues:s}}var y=a(72389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(t){let{className:e,block:a,selectedValue:l,selectValue:i,tabValues:c}=t;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,r.o5)(),d=t=>{const e=t.currentTarget,a=u.indexOf(e),o=c[a].value;o!==l&&(p(e),i(o))},h=t=>{let e=null;switch(t.key){case"Enter":d(t);break;case"ArrowRight":{const a=u.indexOf(t.currentTarget)+1;e=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(t.currentTarget)-1;e=u[a]??u[u.length-1];break}}e?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},e)},c.map((t=>{let{value:e,label:a,attributes:r}=t;return n.createElement("li",(0,o.Z)({role:"tab",tabIndex:l===e?0:-1,"aria-selected":l===e,key:e,ref:t=>u.push(t),onKeyDown:h,onClick:d},r,{className:(0,s.Z)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":l===e})}),a??e)})))}function v(t){let{lazy:e,children:a,selectedValue:o}=t;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){const t=s.find((t=>t.props.value===o));return t?(0,n.cloneElement)(t,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},s.map(((t,e)=>(0,n.cloneElement)(t,{key:e,hidden:t.props.value!==o}))))}function k(t){const e=m(t);return n.createElement("div",{className:(0,s.Z)("tabs-container",b.tabList)},n.createElement(f,(0,o.Z)({},t,e)),n.createElement(v,(0,o.Z)({},t,e)))}function w(t){const e=(0,y.Z)();return n.createElement(k,(0,o.Z)({key:String(e)},t))}},88332:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=a(87462),n=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/dotnet/transclusions/shortest-chatbot",id:"polyglot/dotnet/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/dotnet/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/dotnet/transclusions",slug:"/polyglot/dotnet/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/dotnet/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/dotnet/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},c=[],u={toc:c},p="wrapper";function d(t){let{components:e,...a}=t;return(0,n.kt)(p,(0,o.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'var wechaty = new Wechaty(options, logger).onScan((qrcode, status) => {\n  Console.WriteLine($"Scan QR Code to login: {status} https://wechaty.js.org/qrcode/{(qrcode)}`");\n}).OnLogin( user => {\n  Console.WriteLine("User {user} logined");\n}).OnMessage( message => {\n  Console.WriteLine($"Message: {message}");\n}).Start();\n')))}d.isMDXComponent=!0},7230:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=a(87462),n=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/go/transclusions/shortest-chatbot",id:"polyglot/go/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/go/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/go/transclusions",slug:"/polyglot/go/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/go/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/go/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},c=[],u={toc:c},p="wrapper";function d(t){let{components:e,...a}=t;return(0,n.kt)(p,(0,o.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n "fmt"\n\n  "github.com/wechaty/go-wechaty/wechaty"\n)\n\nfunc main() {\n  _ = wechaty.NewWechaty().\n    OnScan(func(qrCode, status string) {\n      fmt.Printf("Scan QR Code to login: %s\\nhttps://wechaty.js.org/qrcode/%s\\n", status, qrCode)\n    }).\n    OnLogin(func(user string) { fmt.Printf("User %s logged in\\n", user) }).\n    OnMessage(func(message string) { fmt.Printf("Message: %s\\n", message) }).\n    Start()\n}\n')))}d.isMDXComponent=!0},91791:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=a(87462),n=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/java/transclusions/shortest-chatbot",id:"polyglot/java/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/java/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/java/transclusions",slug:"/polyglot/java/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/java/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/java/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},c=[],u={toc:c},p="wrapper";function d(t){let{components:e,...a}=t;return(0,n.kt)(p,(0,o.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'package io.github.wechaty;\n\nclass Bot{\n  public static void main(String args[]){\n    Wechaty bot = Wechaty.instance()\n      .onScan((qrcode, statusScanStatus, data) -> System.out.println(QrcodeUtils.getQr(qrcode)))\n      .onLogin(user -> System.out.println("User logged in :" + user))\n      .onMessage(message -> System.out.println("Message:" + message))\n      .start(true);\n  }\n}\n')))}d.isMDXComponent=!0},55318:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=a(87462),n=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/openapi/transclusions/shortest-chatbot",id:"polyglot/openapi/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/openapi/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/openapi/transclusions",slug:"/polyglot/openapi/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/openapi/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/openapi/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616054254,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},c=[],u={toc:c},p="wrapper";function d(t){let{components:e,...a}=t;return(0,n.kt)(p,(0,o.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"# To be add: curl ...\n")))}d.isMDXComponent=!0},29577:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=a(87462),n=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/php/transclusions/shortest-chatbot",id:"polyglot/php/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/php/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/php/transclusions",slug:"/polyglot/php/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/php/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/php/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},c=[],u={toc:c},p="wrapper";function d(t){let{components:e,...a}=t;return(0,n.kt)(p,(0,o.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},'$wechaty = \\IO\\Github\\Wechaty\\Wechaty::getInstance($token, $endPoint);\n$wechaty->onScan(function($qrcode, $status, $data) {\n    $qr = \\IO\\Github\\Wechaty\\Util\\QrcodeUtils::getQr($qrcode);\n    echo "$qr\\n\\nOnline Image: https://wechaty.js.org/qrcode/$qrcode\\n";\n})->onLogin(function(\\IO\\Github\\Wechaty\\User\\ContactSelf $user) {\n})->onMessage(function(\\IO\\Github\\Wechaty\\User\\Message $message) {\n    $message->say("hello from PHP7.4");\n})->start();\n')))}d.isMDXComponent=!0},34608:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=a(87462),n=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/python/transclusions/shortest-chatbot",id:"polyglot/python/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/python/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/python/transclusions",slug:"/polyglot/python/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/python/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/python/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},c=[],u={toc:c},p="wrapper";function d(t){let{components:e,...a}=t;return(0,n.kt)(p,(0,o.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty\nimport asyncio\n\nasync def main():\n    bot = Wechaty()\n    bot.on('scan', lambda status, qrcode, data: print('Scan QR Code to login: {}\\nhttps://wechaty.js.org/qrcode/{}'.format(status, qrcode)))\n    bot.on('login', lambda user: print('User {} logged in'.format(user)))\n    bot.on('message', lambda message: print('Message: {}'.format(message)))\n    await bot.start()\n\nasyncio.run(main())\n")))}d.isMDXComponent=!0},19001:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=a(87462),n=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/rust/transclusions/shortest-chatbot",id:"polyglot/rust/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/rust/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/rust/transclusions",slug:"/polyglot/rust/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/rust/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/rust/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},c=[],u={toc:c},p="wrapper";function d(t){let{components:e,...a}=t;return(0,n.kt)(p,(0,o.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"let bot = Wechaty::new(PuppetService::new(options).await.unwrap());\n\nbot.on_scan(handle_scan)\n    .on_login(handle_login)\n    .on_logout(handle_logout)\n    .on_message(handle_message)\n    .start()\n    .await;\n")))}d.isMDXComponent=!0},23705:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=a(87462),n=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/scala/transclusions/shortest-chatbot",id:"polyglot/scala/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/scala/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/scala/transclusions",slug:"/polyglot/scala/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/scala/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/scala/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Huan LI (\u674e\u5353\u6853)",lastUpdatedAt:1616051830,formattedLastUpdatedAt:"2021\u5e743\u670818\u65e5",frontMatter:{}},i={},c=[],u={toc:c},p="wrapper";function d(t){let{components:e,...a}=t;return(0,n.kt)(p,(0,o.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'package wechaty\n\nobject DingDongBot {\n  def main(args: Array[String]): Unit = {\n    Wechaty.instance()\n      .onScan(payload     => { println("Scan QR Code to login: %s\\nhttps://wechaty.js.org/qrcode/%s\\n".format(payload.status, payload.qrcode)) })\n      .onLogin(payload    => { println("User %s logged in\\n".format(payload.id)) })\n      .onMessage(message  => { println(message) })\n      .start()\n    Thread.currentThread().join()\n  }\n}\n')))}d.isMDXComponent=!0},3569:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>k,contentTitle:()=>f,default:()=>x,frontMatter:()=>b,metadata:()=>v,toc:()=>w});var o=a(87462),n=(a(67294),a(3905)),s=a(74866),r=a(85162),l=a(47650),i=a(55318),c=a(62570),u=a(34608),p=a(7230),d=a(91791),h=a(29577),g=a(23705),m=a(88332),y=a(19001);const b={},f=void 0,v={unversionedId:"polyglot/transclusions/shortest-chatbots",id:"polyglot/transclusions/shortest-chatbots",title:"shortest-chatbots",description:"<Tabs",source:"@site/docs/polyglot/transclusions/shortest-chatbots.mdx",sourceDirName:"polyglot/transclusions",slug:"/polyglot/transclusions/shortest-chatbots",permalink:"/zh/docs/polyglot/transclusions/shortest-chatbots",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/transclusions/shortest-chatbots.mdx",tags:[],version:"current",lastUpdatedBy:"shwetal",lastUpdatedAt:1630752945,formattedLastUpdatedAt:"2021\u5e749\u67084\u65e5",frontMatter:{}},k={},w=[],N={toc:w},T="wrapper";function x(t){let{components:e,...a}=t;return(0,n.kt)(T,(0,o.Z)({},N,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)(s.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"},{label:"OpenAPI",value:"openapi"}],mdxType:"Tabs"},(0,n.kt)(r.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)(l.default,{mdxType:"ShortestChatbotTypeScript"})),(0,n.kt)(r.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)(c.default,{mdxType:"ShortestChatbotJavaScript"})),(0,n.kt)(r.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)(u.default,{mdxType:"ShortestChatbotPython"})),(0,n.kt)(r.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)(p.default,{mdxType:"ShortestChatbotGo"})),(0,n.kt)(r.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)(d.default,{mdxType:"ShortestChatbotJava"})),(0,n.kt)(r.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)(h.default,{mdxType:"ShortestChatbotPhp"})),(0,n.kt)(r.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)(g.default,{mdxType:"ShortestChatbotScala"})),(0,n.kt)(r.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)(m.default,{mdxType:"ShortestChatbotDotnet"})),(0,n.kt)(r.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)(y.default,{mdxType:"ShortestChatbotRust"})),(0,n.kt)(r.Z,{value:"openapi",mdxType:"TabItem"},(0,n.kt)(i.default,{mdxType:"ShortestChatbotOpenApi"}))))}x.isMDXComponent=!0},62570:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=a(87462),n=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/typescript/transclusions/shortest-chatbot-js",id:"polyglot/typescript/transclusions/shortest-chatbot-js",title:"shortest-chatbot-js",description:"",source:"@site/docs/polyglot/typescript/transclusions/shortest-chatbot-js.mdx",sourceDirName:"polyglot/typescript/transclusions",slug:"/polyglot/typescript/transclusions/shortest-chatbot-js",permalink:"/zh/docs/polyglot/typescript/transclusions/shortest-chatbot-js",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/typescript/transclusions/shortest-chatbot-js.mdx",tags:[],version:"current",lastUpdatedBy:"fennghuang",lastUpdatedAt:1682493184,formattedLastUpdatedAt:"2023\u5e744\u670826\u65e5",frontMatter:{}},i={},c=[],u={toc:c},p="wrapper";function d(t){let{components:e,...a}=t;return(0,n.kt)(p,(0,o.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import { Wechaty } from 'wechaty'\n\nasync function main () {\n  const bot = new Wechaty()\n  bot\n    .on('scan', (qrcode, status) => console.log(`Scan QR Code to login: ${status}\\nhttps://wechaty.js.org/qrcode/${encodeURIComponent(qrcode)}`))\n    .on('login',            user => console.log(`User ${user} logged in`))\n    .on('message',       message => console.log(`Message: ${message}`))\n  await bot.start()\n}\n\nmain()\n  .catch(console.error)\n")))}d.isMDXComponent=!0},47650:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=a(87462),n=(a(67294),a(3905));const s={},r=void 0,l={unversionedId:"polyglot/typescript/transclusions/shortest-chatbot",id:"polyglot/typescript/transclusions/shortest-chatbot",title:"shortest-chatbot",description:"",source:"@site/docs/polyglot/typescript/transclusions/shortest-chatbot.mdx",sourceDirName:"polyglot/typescript/transclusions",slug:"/polyglot/typescript/transclusions/shortest-chatbot",permalink:"/zh/docs/polyglot/typescript/transclusions/shortest-chatbot",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/polyglot/typescript/transclusions/shortest-chatbot.mdx",tags:[],version:"current",lastUpdatedBy:"Xiaohan Li",lastUpdatedAt:1619007923,formattedLastUpdatedAt:"2021\u5e744\u670821\u65e5",frontMatter:{}},i={},c=[],u={toc:c},p="wrapper";function d(t){let{components:e,...a}=t;return(0,n.kt)(p,(0,o.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import { Wechaty } from 'wechaty'\n\nasync function main () {\n  const bot = new Wechaty()\n  bot\n    .on('scan', (qrcode, status) => console.log(`Scan QR Code to login: ${status}\\nhttps://wechaty.js.org/qrcode/${encodeURIComponent(qrcode)}`))\n    .on('login',            user => console.log(`User ${user} logged in`))\n    .on('message',       message => console.log(`Message: ${message}`))\n  await bot.start()\n}\n\nmain()\n  .catch(console.error)\n")))}d.isMDXComponent=!0},68405:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var o=a(87462),n=(a(67294),a(3905)),s=a(74866),r=a(85162);a(3569);const l={title:"Event Logger plugin"},i=void 0,c={unversionedId:"using-plugin-with-wechaty/event-logger",id:"using-plugin-with-wechaty/event-logger",title:"Event Logger plugin",description:"Powered by Wechaty",source:"@site/docs/using-plugin-with-wechaty/event-logger.mdx",sourceDirName:"using-plugin-with-wechaty",slug:"/using-plugin-with-wechaty/event-logger",permalink:"/zh/docs/using-plugin-with-wechaty/event-logger",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/using-plugin-with-wechaty/event-logger.mdx",tags:[],version:"current",lastUpdatedBy:"Huan",lastUpdatedAt:1631608278,formattedLastUpdatedAt:"2021\u5e749\u670814\u65e5",frontMatter:{title:"Event Logger plugin"},sidebar:"docs",previous:{title:"Overview",permalink:"/zh/docs/using-plugin-with-wechaty/overview"},next:{title:"QR Code Terminal plugin",permalink:"/zh/docs/using-plugin-with-wechaty/qr-code-terminal"}},u={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Adding Event Logger plugin",id:"adding-event-logger-plugin",level:2},{value:"1. Create a starter bot",id:"1-create-a-starter-bot",level:3},{value:"2. Install dependency",id:"2-install-dependency",level:3},{value:"3. Integrate the plugin",id:"3-integrate-the-plugin",level:3},{value:"4. Run the bot",id:"4-run-the-bot",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"References",id:"references",level:2}],d={toc:p},h="wrapper";function g(t){let{components:e,...l}=t;return(0,n.kt)(h,(0,o.Z)({},d,l,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/Wechaty/wechaty"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Powered%20By-Wechaty-brightgreen.svg",alt:"Powered by Wechaty"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/wechaty/wechaty-plugin-contrib"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Wechaty%20Plugin-Contrib-brightgreen.svg",alt:"Wechaty Plugin Contrib"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/%3C%2F%3E-TypeScript-blue.svg",alt:"TypeScript"}))),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"EventLogger")," plugin helps in logging Wechaty events with just one line of code. In this tutorial, you will learn how to add the ",(0,n.kt)("inlineCode",{parentName:"p"},"EventLogger")," plugin to a Wechaty bot."),(0,n.kt)("h2",{id:"requirements"},"Requirements"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download"},"Node.js")," v16+"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/wechaty"},"Wechaty")," v0.40+"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/wechaty-plugin-contrib"},"Wechaty Plugin Contrib"))),(0,n.kt)("h2",{id:"getting-started"},"Getting started"),(0,n.kt)("p",null,"You will require ",(0,n.kt)("inlineCode",{parentName:"p"},"Node.js")," version ",(0,n.kt)("strong",{parentName:"p"},"16.0")," or greater in order to follow this tutorial. You can verify whether ",(0,n.kt)("inlineCode",{parentName:"p"},"Node.js")," is installed on your system or whether you have the correct version using the command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"node -v\n")),(0,n.kt)("p",null,"If you do not have ",(0,n.kt)("inlineCode",{parentName:"p"},"Node.js")," installed or your version is below requirement, get the latest version of ",(0,n.kt)("inlineCode",{parentName:"p"},"Node.js")," by following the links below:"),(0,n.kt)("admonition",{title:"Node.js installation docs",type:"note"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#windows"},"Windows")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions"},"Linux","(","Debian/Ubuntu",")")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/package-manager/#macos"},"macOS"))),(0,n.kt)("blockquote",{parentName:"admonition"},(0,n.kt)("p",{parentName:"blockquote"},"Installation guide for ",(0,n.kt)("inlineCode",{parentName:"p"},"Node.js")," on other platforms can be found ",(0,n.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/package-manager/"},"here"),"."))),(0,n.kt)("h2",{id:"adding-event-logger-plugin"},"Adding Event Logger plugin"),(0,n.kt)("p",null,"For the demonstration of adding this plugin, we will use the ",(0,n.kt)("strong",{parentName:"p"},"Starter Bot")," and show you how to add the ",(0,n.kt)("inlineCode",{parentName:"p"},"EventLogger")," plugin to it. Follow the steps below:"),(0,n.kt)("h3",{id:"1-create-a-starter-bot"},"1. Create a starter bot"),(0,n.kt)("p",null,"Follow the instructions on the ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"../examples/basic/starter-bot"},"Starter Bot"))," page to create the foundation of a Wechaty bot."),(0,n.kt)("h3",{id:"2-install-dependency"},"2. Install dependency"),(0,n.kt)("p",null,"As the ",(0,n.kt)("inlineCode",{parentName:"p"},"EventLogger")," plugin is present in the ",(0,n.kt)("inlineCode",{parentName:"p"},"wechaty-plugin-contrib")," NPM package, you have to first add it to the dependencies. It can be installed using the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"npm i wechaty-plugin-contrib\n")),(0,n.kt)("h3",{id:"3-integrate-the-plugin"},"3. Integrate the plugin"),(0,n.kt)("p",null,"Inside the ",(0,n.kt)("inlineCode",{parentName:"p"},"event-logger-bot.ts")," file, import the plugin:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import { EventLogger } from 'wechaty-plugin-contrib'\n")),(0,n.kt)("p",null,"Now, just before starting the bot, you can use this plugin:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// Add the following line to use the plugin\nbot.use(EventLogger())\nbot.start()\n")),(0,n.kt)("h3",{id:"4-run-the-bot"},"4. Run the bot"),(0,n.kt)("p",null,"In order to run the bot, first you have to ",(0,n.kt)("strong",{parentName:"p"},"export/set")," an environment variable with the type of puppet to use, and then start the bot:"),(0,n.kt)(s.Z,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,n.kt)(r.Z,{value:"linux",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\nmake bot\n# the above is equals to the below command:\n# npm start\n#   or, npx ts-node examples/ding-dong-bot.ts\n"))),(0,n.kt)(r.Z,{value:"mac",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"export WECHATY_LOG=verbose\nexport WECHATY_PUPPET=wechaty-puppet-wechat\nmake bot\n# the above is equals to the below command:\n# npm start\n#   or, npx ts-node examples/ding-dong-bot.ts\n"))),(0,n.kt)(r.Z,{value:"windows",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"set WECHATY_LOG=verbose\nset WECHATY_PUPPET=wechaty-puppet-wechat\nmake bot\n# the above is equals to the below command:\n# npm start\n#   or, npx ts-node examples/ding-dong-bot.ts\n")))),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"EventLogger plugin output",src:a(82944).Z,width:"1404",height:"926"})),(0,n.kt)("p",null,"Congratulations! You have successfully integrated the ",(0,n.kt)("inlineCode",{parentName:"p"},"EventLogger")," plugin to your Wechaty bot. You will see after running the bot, it starts logging the Wechaty events."),(0,n.kt)("h2",{id:"conclusion"},"Conclusion"),(0,n.kt)("p",null,"You can apply a similar concept to add the ",(0,n.kt)("inlineCode",{parentName:"p"},"EventLogger")," plugin to any of your Wechaty bots. You can learn more about this plugin ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/wechaty/wechaty-plugin-contrib#2-eventlogger"},"here"),"."),(0,n.kt)("p",null,"Learn how to integrate ",(0,n.kt)("a",{parentName:"p",href:"./qr-code-terminal"},"QR Code Terminal Plugin")," to your Wechaty bot in the next tutorial."),(0,n.kt)("h2",{id:"references"},"References"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/wechaty/wechaty-plugin-contrib"},"GitHub repository of Wechaty Plugin Contrib")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/wechaty-plugin-contrib"},"NPM package of Wechaty Plugin Contrib")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=tfGZXoe_aA4"},"Wechaty plugin launch video"))))}g.isMDXComponent=!0},82944:(t,e,a)=>{a.d(e,{Z:()=>o});const o=a.p+"assets/images/event-logger-output-d9796e0eeb68e68d45cd98b4675b9b01.webp"}}]);